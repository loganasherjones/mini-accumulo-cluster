{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the documentation for the unofficial Mini Accumulo Cluster. Accumulo comes with a builtin Mini Accumulo Cluster, but it is hard to configure, doesn't work with later versions of Java, and does not provide a container based solution.</p> <p>This project sets out to solve all of these problems and provide a better experience for integration testing of an Accumulo Cluster.</p> <p>Get Started With Java  Get Started With Docker </p>"},{"location":"docker/","title":"Docker Mini Accumulo Cluster","text":"<p>This section will go over how to use the Mini Accumulo Cluster with Docker.</p>"},{"location":"docker/#usage","title":"Usage","text":"<p>The fastest way to get started is:</p> <pre><code>docker run \\\n  -it \\\n  --rm \\\n  --name mac \\\n  -p 21811:21811 \\\n  loganasherjones/mini-accumulo-cluster:1.10.4\n</code></pre> <p>You should see logs similar to:</p> <pre><code>com.loganasherjones.mac.MAC [main]  Starting Mini Accumulo Cluster\ncom.loganasherjones.mac.MACProcessSpawner   [main]  Starting mac-a9fac1eb-b684-4cc9-8325-a90c57971dbb-zookeeper Process\ncom.loganasherjones.mac.MAC [main]  Waiting for zookeeper to report ok.\ncom.loganasherjones.mac.MAC [main]  Zookeeper reported ok.\ncom.loganasherjones.mac.MACProcessSpawner   [main]  Starting mac-a9fac1eb-b684-4cc9-8325-a90c57971dbb-accumulo-init Process\ncom.loganasherjones.mac.MACProcessSpawner   [main]  Starting mac-a9fac1eb-b684-4cc9-8325-a90c57971dbb-tserver-0 Process\ncom.loganasherjones.mac.MACProcessSpawner   [main]  Starting mac-a9fac1eb-b684-4cc9-8325-a90c57971dbb-tserver-1 Process\ncom.loganasherjones.mac.MACProcessSpawner   [main]  Starting mac-a9fac1eb-b684-4cc9-8325-a90c57971dbb-accumulo-manager-state Process\ncom.loganasherjones.mac.MACProcessSpawner   [main]  Starting mac-a9fac1eb-b684-4cc9-8325-a90c57971dbb-manager Process\ncom.loganasherjones.mac.MACProcessSpawner   [main]  Starting mac-a9fac1eb-b684-4cc9-8325-a90c57971dbb-gc Process\ncom.loganasherjones.mac.MAC [main]  Mini Accumulo Cluster Started successfully\n</code></pre> <p>Congratulations, you have an accumulo cluster!</p> <p>You can connect to it with the Accumulo shell by opening another terminal and typing:</p> <pre><code>docker exec -it mac /app/bin/mac-app shell\n</code></pre> <p>This should drop you into a shell as root:</p> <pre><code>Shell - Apache Accumulo Interactive Shell\n- \n- version: 1.10.4\n- instance name: default\n- instance id: bd3cd6c9-a3b7-4094-a08e-74c03657019a\n- \n- type 'help' for a list of available commands\n- \nroot@default&gt;\n</code></pre> <p>Alternatively, you can connect with the Java API:</p> <pre><code>public void myTest() {\n    ZooKeeperInstance instance = new ZooKeeperInstance(\"default\", \"127.0.0.1:21811\");\n    Connector conn = instance.getConnector(\"root\", new PasswordToken(\"notsecure\"));\n}\n</code></pre> <p>Happy integration testing!</p>"},{"location":"docker/#configuration","title":"Configuration","text":"<p>While the Java API provides the most customization options the docker image is typically configured with environment variables. Here they are listed out:</p> Env Name Default Description <code>MAC_ACCUMULO_BIND_ADDRESS</code> N/A This will automatically be set to the container IP. <code>MAC_BASE_DIR</code> <code>/app</code> Where MAC will store config / logs / data <code>MAC_FILE_LOGGING</code> N/A Set to <code>\"true\"</code> if you want MAC to log to file instead of STDOUT/STDERR <code>MAC_INSTANCE_NAME</code> <code>default</code> This will set Accumulo's instance name <code>MAC_LOG_LEVEL</code> <code>INFO</code> The log level for MAC itself <code>MAC_NUM_TSERVERS</code> <code>2</code> This will set the number of Tablet Servers Spawned <code>MAC_ROOT_PASSWORD</code> <code>notsecure</code> This will set the password for the <code>root</code> user <code>MAC_USE_EXTERNAL_ZOOKEEPER</code> <code>false</code> This will force MAC not to spawn its own Zookeeper Instance <code>MAC_ZOOKEEPER_HOST</code> <code>127.0.0.1</code> The hostname to use for zookeeper <code>MAC_ZOOKEEPER_PORT</code> <code>21811</code> The port MAC will use for Zookeeper <code>MAC_ZOOKEEPER_STARTUP_TIMEOUT_MS</code> 10,000 Sets how long MAC will wait for Zookeeper to respond to <code>ruok</code> <code>ROOT_LOG_LEVEL</code> <code>ERROR</code> The root log level for all loggers"},{"location":"java/","title":"Java Mini Accumulo Cluster","text":"<p>This section will go over how to use the Mini Accumulo Cluster from Java code.</p>"},{"location":"java/#installation","title":"Installation","text":"<p>Add the following to your build tool:</p> Gradle (kts)Gradle (groovy)Maven <pre><code>testImplementation(\"com.loganasherjones:mini-accumulo-cluster:1.10.4\")\n</code></pre> <pre><code>testImplementation \"com.loganasherjones:mini-accumulo-cluster:1.10.4\"\n</code></pre> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.webjars.bower&lt;/groupId&gt;\n    &lt;artifactId&gt;protobuf&lt;/artifactId&gt;\n    &lt;version&gt;5.0.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"java/#usage","title":"Usage","text":"<p>The fastest way to get started is to initialize the object and call <code>start()</code>:</p> <pre><code>import com.loganasherjones.mac.MAC;\nimport org.apache.accumulo.core.client.Connector;\n\npublic class MyTest {\n\n    public void testAccumulo() throws Exception {\n        // Create mac with the default configuration.\n        MAC cluster = new MAC();\n\n        // Start the server.\n        cluster.start();\n\n        // Get a connector for the 'root' user.\n        Connector rootConnector = cluster.getRootConnector();\n\n        // TODO: Insert your test code here.\n\n        // When you're done, stop the server.\n        cluster.stop();\n    }\n}\n</code></pre>"},{"location":"java/#configuration","title":"Configuration","text":"<p>There are many options you can use to configure the Mini Accumulo Cluster. To set them in java, you'll need to use the <code>MACConfig.MACConfigBuilder</code> class:</p> <pre><code>import com.loganasherjones.mac.MAC;\nimport com.loganasherjones.mac.MACConfig;\n\npublic class MyTest {\n\n    public void testAccumulo() {\n        MACConfig.MACConfigBuilder builder = new MACConfig.MACConfigBuilder();\n\n        // Build a config. These are just some of the options.\n        MACConfig config = builder\n                .withFileLogging() // Log to files instead of STDOUT/STDERR\n                .withRootPassword(\"supersecret\") // Change root password\n                .withBaseDirectory(new File(\"/some/path\")) // Set configuration / logging files destination\n                .withStaticZooKeeperPort(21811) // Set specific Zookeeper port\n                .build();\n\n        MAC cluster = new MAC(config);\n    }\n}\n</code></pre> <p>One of the main goals of this project is to provide a way to programatically configure just about everything pertaining to the MAC. The <code>MACConfigBuilder</code> allows you to set any JVM property, for any/all processes, along with  controlling the <code>zoo.cfg</code> and <code>accumulo-site.xml</code> file. If you need more customization, don't hesitate to open an issue.</p>"}]}